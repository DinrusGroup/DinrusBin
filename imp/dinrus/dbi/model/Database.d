/**
 * Authors: The D DBI project
 * Copyright: BSD license
 */

module dbi.model.Database;

private import dbi.model.Result,
               dbi.model.Statement,
               dbi.model.Constants;

/**
  * Интерфейс БазаДанных главная абстракция базы данных в D DBI.
  * Экземпляр реализации может представлять собой подключение к
  * определенной БД, СУБД или являться дальнейшей абстракцией
  * aka фабрикой.
  *
  * Примечание: многие СУБД могут реализовывать дополнительные интерфейсы
  * и/или подынтерфейсы БазаДанных для поддержки дополнительных возможностей.
  */

interface БазаДанных 
{
    проц подключись(ткст имя,
                 ткст[ткст] парамы = пусто,
                 ВозможностьДби[] возможности = пусто);

    /**
      * Возвращает да, если данная реализация БазаДанных поддерживает
      * указанную возможность.
      */
    бул естьВозможность(ВозможностьДби возможность);
    /**
      * Возвращает да, если данная возможность включена в
      * данный экземпляр БазаДанных.
      */
    бул включен(ВозможностьДби возможность);
    /**
      * Активирует данную возможность в экземпляре БД.
      * 
      * Примечание: возможности как правило нужно активировать перед
      * подключением, передавая их таким образом в конструктор.
      *
      * Выводит:
      *     ИсклДБИ, если данная возможность не поддерживается.
      */
    проц включи(ВозможностьДби возможность);
    /**
      * Отключает данную возможность в экземпляре БД.
      *
      * For возможности that are включен in the DBMS at подключение,
      * this call will only have effect prior to calling подключись.
      */
    проц отключи(ВозможностьДби возможность);

    проц закрой();

    проц выполни(in ткст эскюэл);

    Результат запрос(in ткст эскюэл);

    Инструкция подготовь(in ткст эскюэл);

    ткст искейп(in ткст запрос, ткст приёмн = пусто);

    /**
      * Returns a foreachable instance of таблицы  in the бд,
      * with имяs фильтрed by the фильтр parameter.
      * 
      * If no фильтр, or пусто, is passed - all таблицы are returned.
      */
    Таблицы таблицы(ткст фильтр = пусто);

    бул естьТаблица(ткст имя);
    бдол идПоследнейВставки();
    бдол задействованныеРяды();

    проц стартТранзакции();
    проц откат();
    проц коммит();
}

interface БДсПротекциейДоступа : БазаДанных
{
    проц подключись(char [] имя, ткст пользователь = пусто, 
                 ткст пароль = пусто,
                 ткст[ткст] парамы = пусто,
                 ВозможностьДби[] возможности = пусто);

}

interface ПоддержкаМультиРезультата 
{
    МультиРезультат запрос(ткст эскюэл);
}

interface Таблица : МетаданныеСтолбца
{
    ткст имя();
    Ряды ряды();
}

interface Таблицы  
{
    цел opApply (цел delegate(inout Таблица) дг);
    т_мера таблицы();
}
