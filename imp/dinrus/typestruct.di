module typestruct;

/****************************
       Исходное назначение данного модуля:

 Попытаемся извлечь для себя что-то полезное из
модуля object, несущего в себе самые важные сведения 
о классах языка Ди. Возможно, у нас получится
найти определённый подход ко всему этому богатству (?).

 Вообще, это очень напоминает объектную метаинформацию
в Qt SDK - есть что-то общее. Можно попытаться усовершенствовать и
сделать более легко доступным для использования и полезным в
повседневной жизни (?).

 Кроме того, ничто не мешает усовершенствовать класс
Объект на базе имеющегося и внести в него новые черты, т.е.
переделать его в более совершенный класс и оставить
исходный только ради исправной работы компилятора, который,
по-видимому, связан со многими рантаймными функциями Ди
непосредственно,и, находя таковые, совершает над ними
специфичную запланированную обработку.

 Ведь именно это мешает нам в руссификации некоторых встроенных в
компилятор функций, например,таких как remove для массивов,
sizeof, typeof, length, ptr и т.д. Хотя для англоязычных граждан
это, наоборот, кажется очень удобным...

В СтруктуреТипов собраны различные классы информации о типе
рантаймного характера. Их можно получить с помощью выражения

TypeidExpression:
    typeid ( Тип ),
	
которое возвращает экземпляр класса ИнфОТипе,
соответствующий данному типу. 

***************************/

struct СтруктураТипов
{
Объект объ;//Object
Исключение искл;//Exception
Ошибка ош;//Error
Монитор монитр; //Monitor
ИнфОМодуле инфомод; //ModuleInfo
Интерфейс ифейс; //Interface
ИнфОКлассе инфокласc; //ClassInfo
ИнфОТипеИСмещ инфотис; //OffsetTypeInfo
ИнфОТипе инфотип; //TypeInfo
ТипТипдеф ттипдеф; //TypeInfo_Typedef
ТипПеречень тперечнь; //TypeInfo_Enum
ТипУказатель туказ; //TypeInfo_Pointer: нет ли накладки с TypeInfo_P? (Весьма похоже...)
ТипМассив тмас; //TypeInfo_Array
ТипСтатМас тстатмас; //TypeInfo_StaticArray
ТипАссоцМас тасоцмас; //TypeInfo_AssociativeArray
ТипФункция тфункц; //TypeInfo_Function
ТипДелегат тделегат; //TypeInfo_Delegate
ТипКласс ткласc; //TypeInfo_Class
ТипИнтерфейс тифейс; //TypeInfo_Interface
ТипСтрукт тструкт; //TypeInfo_Struct
ТипКортеж ткортеж; //TypeInfo_Tuple
ТипКонстанта тконстант; //TypeInfo_Const
ТипИнвариант тинвар; //TypeInfo_Invariant
ТипОбъмас тобъмас; //TypeInfo_AC
ТипКдвомас ткдвомс; //TypeInfo_Ar
ТипКплавмас ткплавмс; //TypeInfo_Aq
ТипКреалмас ткреалмс; //TypeInfo_Ac
ТипДвомас тдвомс; //TypeInfo_Ad
ТипВдвомас твдвомс; //TypeInfo_Ap
ТипПлавмас тплавмс; //TypeInfo_Af
ТипВплавмас твпламс; //TypeInfo_Ao
ТипБайтмас тбайтмс; //TypeInfo_Ag
ТипБбайтмас тббайтмс; //TypeInfo_Ah
Типроцмас тпроцмс; //TypeInfo_Av
ТипБулмас тбулмс; //TypeInfo_Ab
ТипТкст тткст; //TypeInfo_Aa
ТипЦелмас тцелмс; //TypeInfo_Ai
ТипБцелмас тбцелмс; //TypeInfo_Ak
ТипЮткст тюткст; //TypeInfo_Aw
ТипДолмас тдолмс; //TypeInfo_Al
ТипБдолмас тбдолмс; //TypeInfo_Am
ТипРеалмас треалмс; //TypeInfo_Ae
ТипВреалмас твреалмс; //TypeInfo_Aj
ТипКратмас ткратмс; //TypeInfo_As
ТипБкратмас тбкратмс; //TypeInfo_At
ТипШткст тшткст; //TypeInfo_Au
ТипБайт тбайт; //TypeInfo_g
ТипОбъ тобъ; //TypeInfo_C
ТипКдво ткдво; //TypeInfo_r
ТипКплав ткплав; //TypeInfo_q
ТипСим тсим; //TypeInfo_a
ТипКреал ткреал; //TypeInfo_c
ТипДим тдим; //TypeInfo_w
ТипДг тделег; //TypeInfo_D
ТипДво тдво; //TypeInfo_d
ТипПлав тплав; //TypeInfo_f
ТипВдво твдво; //TypeInfo_p
ТипВплав твплав; //TypeInfo_o
ТипЦел тцел; //TypeInfo_i
ТипВреал твреал; //TypeInfo_j
ТипДол тдол; //TypeInfo_l
ТипУк тук; //TypeInfo_P: в чём его разница с TypeInfo_Pointer!?.
ТипРеал треал; //TypeInfo_e
ТипКрат ткрат; //TypeInfo_s
ТипБбайт тббайт; //TypeInfo_h
ТипБул тбул; //TypeInfo_b
ТипБцел тбцел; //TypeInfo_k
ТипБдол тбдол; //TypeInfo_m
ТипБкрат тбкрат; //TypeInfo_t
ТипПроц тпроц; //TypeInfo_v
ТипШим тшим; //TypeInfo_u
}
