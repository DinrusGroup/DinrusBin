/*******************************************************************************

        copyright:      Copyright (c) 2004 Kris Bell. все rights reserved

        license:        BSD стиль: $(LICENSE)

        version:        Mar 2004: Initial release
        version:        Jan 2005: RedShodan patch for таймаут запрос
        version:        Dec 2006: Outback release
        version:        Apr 2009: revised for asynchronous IO

        author:         Kris

*******************************************************************************/

module net.device.Socket;

private import sys.Common;

private import io.device.Conduit;

package import net.device.Berkeley;

/*******************************************************************************

*******************************************************************************/

version (Windows)
{
         private import sys.win32.WsaSock;
}

/*******************************************************************************

        A wrapper around the Беркли API в_ implement the ИПровод 
        abstraction и добавь поток-specific functionality.

*******************************************************************************/

class Сокет : Провод, ИВыбираемый
{
        public alias исконный сокет;             // backward compatibility

        private НаборСокетов pending;              // синхронно timeouts   
        private Беркли  беркли;             // wrap a беркли сокет


        /// see super.таймаут(цел)
        deprecated проц установиТаймаут (дво t) ;

        deprecated бул былТаймаут ();

        /***********************************************************************
        
                Созд a Потокing Internet сокет

        ***********************************************************************/

        this ();

        /***********************************************************************
        
                Созд an Internet Сокет with the provопрed characteristics

        ***********************************************************************/

        this (Адрес адр) ;
                                
        /***********************************************************************
        
                Созд an Internet сокет

        ***********************************************************************/

        this (ПСемействоАдресов семейство, ПТипСок тип, ППротокол протокол);

        /***********************************************************************

                Return the имя of this устройство

        ***********************************************************************/

        override ткст вТкст();

        /***********************************************************************

                Models a укз-oriented устройство. 

                TODO: figure out как в_ avoопр exposing this in the general
                case

        ***********************************************************************/

        Дескр фукз ();

        /***********************************************************************

                Return the сокет wrapper
                
        ***********************************************************************/

        Беркли* исконный ();

        /***********************************************************************

                Return a preferred размер for buffering провод I/O

        ***********************************************************************/

        override т_мера размерБуфера ();

        /***********************************************************************

                Connect в_ the provопрed endpoint
        
        ***********************************************************************/

        Сокет подключись (ткст адрес, бцел порт);

        /***********************************************************************

                Connect в_ the provопрed endpoint
        
        ***********************************************************************/

        Сокет подключись (Адрес адр);

        /***********************************************************************

                Bind this сокет. This is typically использован в_ конфигурируй a
                listening сокет (such as a сервер or multicast сокет).
                The адрес given should describe a local адаптер, or
                specify the порт alone (АДР_ЛЮБОЙ) в_ have the OS присвой
                a local адаптер адрес.
        
        ***********************************************************************/

        Сокет вяжи (Адрес адрес);

        /***********************************************************************

                Inform другой конец of a подключен сокет that we're no longer
                available. In general, this should be invoked before закрой()
        
                The глуши function shuts down the connection of the сокет: 

                    -   stops receiving данные for this сокет. If further данные 
                        arrives, it is rejected.

                    -   stops trying в_ transmit данные из_ this сокет. Also
                        discards any данные waiting в_ be sent. Стоп looking for 
                        acknowledgement of данные already sent; don't retransmit 
                        if any данные is lost.

        ***********************************************************************/

        Сокет глуши ();

        /***********************************************************************

                Release this Сокет

                Note that one should always disconnect a Сокет under 
                нормаль conditions, и generally invoke глуши on все 
                подключен СОКЕТs beforehand

        ***********************************************************************/

        override проц открепи ();
        
       /***********************************************************************

                Чит контент из_ the сокет. Note that the operation 
                may таймаут if метод установиТаймаут() имеется been invoked with 
                a non-zero значение.

                Returns the число of байты читай из_ the сокет, or
                ИПровод.Кф where there's no ещё контент available.

        ***********************************************************************/

        override т_мера читай (проц[] приёмн);
        
        /***********************************************************************

        ***********************************************************************/

        override т_мера пиши (проц[] ист);

        /***********************************************************************

                Transfer the контент of другой провод в_ this one. Returns
                the приёмн ИПотокВывода, or throws ВВИскл on failure.

                Does optimized transfers 

        ***********************************************************************/

        override ИПотокВывода копируй (ИПотокВвода ист, т_мера max = -1);

        /***********************************************************************
 
                Manage сокет IO under a таймаут

        ***********************************************************************/

        package final бул жди (бул reading);

        /***********************************************************************

                Throw an ВВИскл noting the последний ошибка
        
        ***********************************************************************/

        final проц ошибка ();

        /***********************************************************************
 
        ***********************************************************************/

        version (Win32)
        {
                private OVERLAPPED overlapped;
        
                /***************************************************************
        
                        Connect в_ the provопрed endpoint
                
                ***************************************************************/
        
                private проц asyncConnect (Адрес адр);
        
                /***************************************************************
        
                ***************************************************************/
        
                private проц asyncCopy (Дескр укз);

                /***************************************************************

                        Чит a чанк of байты из_ the файл преобр_в the provопрed
                        Массив. Returns the число of байты читай, or Кф where 
                        there is no further данные.

                        Operates asynchronously where the hosting нить is
                        configured in that manner.

                ***************************************************************/

                private т_мера asyncRead (проц[] приёмн);

                /***************************************************************

                        Зап a чанк of байты в_ the файл из_ the provопрed
                        Массив. Returns the число of байты записано, or Кф if 
                        the вывод is no longer available.

                        Operates asynchronously where the hosting нить is
                        configured in that manner.

                ***************************************************************/

                private т_мера asyncWrite (проц[] ист);

                /***************************************************************

                ***************************************************************/

                private т_мера жди (планировщик.Тип тип, бцел байты=0);
        
                /***************************************************************
        
                ***************************************************************/
        
                private static проц patch (т_сокет приёмн, бцел как, т_сокет* ист=пусто);
        }


        /***********************************************************************
 
        ***********************************************************************/

        version (Posix)
        {
                /***************************************************************
        
                        Connect в_ the provопрed endpoint
                
                ***************************************************************/
        
                private проц asyncConnect (Адрес адр);
        
                /***************************************************************
        
                ***************************************************************/
        
                Сокет asyncCopy (Дескр файл);

                /***************************************************************

                        Чит a чанк of байты из_ the файл преобр_в the provопрed
                        Массив. Returns the число of байты читай, or Кф where 
                        there is no further данные.

                        Operates asynchronously where the hosting нить is
                        configured in that manner.

                ***************************************************************/

                private т_мера asyncRead (проц[] приёмн);

                /***************************************************************

                        Зап a чанк of байты в_ the файл из_ the provопрed
                        Массив. Returns the число of байты записано, or Кф if 
                        the вывод is no longer available.

                        Operates asynchronously where the hosting нить is
                        configured in that manner.

                ***************************************************************/

                private т_мера asyncWrite (проц[] ист);
        }
}



/*******************************************************************************


*******************************************************************************/

class СерверСокет : Сокет
{      
        /***********************************************************************

        ***********************************************************************/

        this (бцел порт, цел backlog=32, бул reuse=нет);

        /***********************************************************************

        ***********************************************************************/

        this (Адрес адр, цел backlog=32, бул reuse=нет);

        /***********************************************************************

                Return the имя of this устройство

        ***********************************************************************/

        override ткст вТкст();

        /***********************************************************************

        ***********************************************************************/

        Сокет прими (Сокет реципиент = пусто);

        /***********************************************************************

        ***********************************************************************/

        version (Windows)
        {
                /***************************************************************

                ***************************************************************/

                private проц asyncAccept (Сокет реципиент);
        }

        /***********************************************************************

        ***********************************************************************/

        version (Posix)
        {
                /***************************************************************

                ***************************************************************/

                private проц asyncAccept (Сокет реципиент);
        }
}

