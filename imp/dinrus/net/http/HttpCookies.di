/*******************************************************************************

        copyright:      Copyright (c) 2004 Kris Bell. все rights reserved

        license:        BSD стиль: $(LICENSE)

        version:        Initial release: April 2004      
        
        author:         Kris

*******************************************************************************/

module net.http.HttpCookies;

private import  io.device.Array;

private import  io.model;

private import  io.stream.Iterator;

private import  net.http.HttpHeaders;

private import  Целое = text.convert.Integer;

/*******************************************************************************

        Defines the Куки class, и the means for reading & writing them.
        Куки implementation conforms with RFC 2109, but supports parsing 
        of сервер-sопрe кукики only. Client-sопрe кукики are supported in
        terms of вывод, but ответ parsing is not yet implemented ...

        See over <A HREF="http://www.faqs.org/rfcs/rfc2109.html">here</A>
        for the RFC document.        

*******************************************************************************/

class Куки //: ИЗаписываемое
{
        ткст          имя,
                        путь,
                        значение,
                        домен,
                        коммент;
        бцел            vrsn=1;              // 'version' is a reserved word
        бул            безопасно=нет;
        дол            максВозраст=дол.min;

        /***********************************************************************
                
                Construct an пустой клиент-sопрe куки. You добавь these
                в_ an вывод request using КлиентППГТ.добавьКуки(), or
                the equivalent.

        ***********************************************************************/

        this () ;

        /***********************************************************************
        
                Construct a куки with the provопрed атрибуты. You добавь 
                these в_ an вывод request using КлиентППГТ.добавьКуки(), 
                or the equivalent.

        ***********************************************************************/

        this (ткст имя, ткст значение);

        /***********************************************************************
        
                Набор the имя of this куки

        ***********************************************************************/

        Куки установиИмя (ткст имя);

        /***********************************************************************
        
                Набор the значение of this куки

        ***********************************************************************/

        Куки установиЗначение (ткст значение);

        /***********************************************************************
                
                Набор the version of this куки

        ***********************************************************************/

        Куки установиВерсию (бцел vrsn);

        /***********************************************************************
        
                Набор the путь of this куки

        ***********************************************************************/

        Куки установиПуть (ткст путь);

        /***********************************************************************
        
                Набор the домен of this куки

        ***********************************************************************/

        Куки установиДомен (ткст домен);

        /***********************************************************************
        
                Набор the коммент associated with this куки

        ***********************************************************************/

        Куки установиКоммент (ткст коммент);

        /***********************************************************************
        
                Набор the maximum duration of this куки

        ***********************************************************************/

        Куки установиМаксВозраст (дол максВозраст);

        /***********************************************************************
        
                Indicate whether this куки should be consопрered безопасно or not

        ***********************************************************************/

        Куки установиБезоп (бул безопасно);
/+
        /***********************************************************************
        
                Вывод the куки as a текст поток, via the provопрed ИПисатель

        ***********************************************************************/

        проц пиши (ИПисатель писатель)
        {
                произведи (&писатель.буфер.используй);
        }
+/
        /***********************************************************************
        
                Вывод the куки as a текст поток, via the provопрed consumer

        ***********************************************************************/

        проц произведи (т_мера delegate(проц[]) используй);

        /***********************************************************************
        
                Reset this куки

        ***********************************************************************/

        Куки очисть ();
}



/*******************************************************************************

        Implements a стэк of кукики. Each куки is pushed onto the
        стэк by a парсер, which takes its ввод из_ ЗаголовкиППГТ. The
        стэк can be populated for Всё клиент и сервер sопрe кукики.

*******************************************************************************/

class СтэкКуки
{
        private цел             глубина;
        private Куки[]        кукики;

        /**********************************************************************

                Construct a куки стэк with the specified начальное протяженность.
                The стэк will grow as necessary over время.

        **********************************************************************/

        this (цел размер);

        /**********************************************************************

                Pop the стэк все the way в_ zero

        **********************************************************************/

        final проц сбрось ();

        /**********************************************************************

                Return a свежий куки из_ the стэк

        **********************************************************************/

        final Куки сунь ();
        
        /**********************************************************************

                Resize the стэк such that it имеется ещё room.

        **********************************************************************/

        private final static проц перемерь (ref Куки[] кукики, цел размер);

        /**********************************************************************

                Iterate over все кукики in стэк

        **********************************************************************/

        цел opApply (цел delegate(ref Куки) дг);
}



/*******************************************************************************

        This is the support point for сервер-sопрe кукики. It wraps a
        СтэкКуки together with a установи of ЗаголовкиППГТ, along with the
        appropriate куки парсер. One would do something very similar
        for клиент sопрe куки parsing also.

*******************************************************************************/

class ОбзорКуковППГТ //: ИЗаписываемое
{
        private бул                    разобрано;
        private СтэкКуки             стэк;
        private РазборщикКуков            парсер;
        private ОбзорЗаголовковППГТ         заголовки;

        /**********************************************************************

                Construct куки wrapper with the provопрed заголовки.

        **********************************************************************/

        this (ОбзорЗаголовковППГТ заголовки);
/+
        /**********************************************************************

                Вывод each of the кукики разобрано в_ the provопрed ИПисатель.

        **********************************************************************/

        проц пиши (ИПисатель писатель)
        {
                произведи (&писатель.буфер.используй, КонстППГТ.Кс);
        }
+/
        /**********************************************************************

                Вывод the токен список в_ the provопрed consumer

        **********************************************************************/

        проц произведи (т_мера delegate(проц[]) используй, ткст кс = КонстППГТ.Кс);

        /**********************************************************************

                Reset these кукики for другой разбор

        **********************************************************************/

        проц сбрось ();

        /**********************************************************************

                Parse все кукики из_ our ЗаголовкиППГТ, pushing each onto
                the СтэкКуки as we go.

        **********************************************************************/

        СтэкКуки разбор ();
}



/*******************************************************************************

        Handles a установи of вывод кукики by writing them преобр_в the список of
        вывод заголовки.

*******************************************************************************/

class КукикиППГТ
{
        private ИмяЗаголовкаППГТ  имя;
        private ЗаголовкиППГТ     заголовки;

        /**********************************************************************

                Construct an вывод куки wrapper upon the provопрed 
                вывод заголовки. Each куки добавьed is преобразованый в_ an
                добавьition в_ those заголовки.

        **********************************************************************/

        this (ЗаголовкиППГТ заголовки, ИмяЗаголовкаППГТ имя = ЗаголовокППГТ.УстановитьКуки);

        /**********************************************************************

                Добавь a куки в_ our вывод заголовки.

        **********************************************************************/

        проц добавь (Куки куки);
}



/*******************************************************************************

        Сервер-sопрe куки парсер. See RFC 2109 for details.

*******************************************************************************/

class РазборщикКуков : Обходчик!(сим)
{
        private enum Состояние {Начало, ЛЗначение, Равно, ПЗначение, Токен, ВКавычка, НКавычка};

        private СтэкКуки       стэк;
        private Массив             массив;
        private static бул[128]  симКарта;

        /***********************************************************************

                наполни a карта of токен разделители

        ***********************************************************************/

        static this ()
        {
                симКарта['('] = да;
                симКарта[')'] = да;
                симКарта['<'] = да;
                симКарта['>'] = да;
                симКарта['@'] = да;
                симКарта[','] = да;
                симКарта[';'] = да;
                симКарта[':'] = да;
                симКарта['\\'] = да;
                симКарта['"'] = да;
                симКарта['/'] = да;
                симКарта['['] = да;
                симКарта[']'] = да;
                симКарта['?'] = да;
                симКарта['='] = да;
                симКарта['{'] = да;
                симКарта['}'] = да;
        }
        
        /***********************************************************************

        ***********************************************************************/

        this (СтэкКуки стэк);

        /***********************************************************************

                Callback for обходчик.следщ(). We скан for имя-значение
                pairs, populating Куки экземпляры along the way.

        ***********************************************************************/

        protected т_мера скан (проц[] данные);
		
        /***********************************************************************
        
                Locate the следщ токен из_ the provопрed буфер, и карта a
                буфер reference преобр_в токен. Returns да if a токен was 
                located, нет otherwise. 

                Note that the буфер контент is not duplicated. Instead, a
                срез of the буфер is referenced by the токен. You can use
                Токен.клонируй() or Токен.вТкст().dup() в_ копируй контент per
                your application needs.

                Note also that there may still be one токен left in a буфер 
                that was not terminated correctly (as in eof conditions). In 
                such cases, токены are mapped onto остаток контент и the 
                буфер will have no ещё читаемый контент.

        ***********************************************************************/

        бул разбор (ткст заголовок);

        /**********************************************************************

                in-place conversion в_ lowercase 

        **********************************************************************/

        final static ткст вПроп (ref ткст ист);

        /***********************************************************************

                Is 'c' a действителен токен character?

        ***********************************************************************/

        private static бул токен_ли (сим c);
}
   
     
