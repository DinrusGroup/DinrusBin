module viz.control;
import viz.common, viz.menu, viz.form, viz.data, viz.app;

extern(Windows) BOOL обрвызовЗэтИндексГет(HWND уок, LPARAM lparam);
extern(Windows) BOOL перечисляемОкна(HWND уок, LPARAM lparam);
extern(Windows) BOOL перечисляемПервыеОкна(HWND уок, LPARAM lparam);


extern(D):

	
class УпрЭлт: Объект, ИОкно // docmain
{

class КоллекцияУпрЭлтов
	{	
		this(УпрЭлт хозяин)	;
		цел длина() ;	
		УпрЭлт opIndex(цел i) ;
		проц добавь(УпрЭлт упрэлм);
		бул содержит(УпрЭлт упрэлм);
		цел индексУ(УпрЭлт упрэлм);
		проц удали(УпрЭлт упрэлм);
		проц удалиПо(цел i);
		цел opApply(цел delegate(inout УпрЭлт) дг);
		mixin OpApplyAddIndex!(opApply, УпрЭлт);

	}
	
	protected проц приДобавленииУпрЭлта(АргиСобУпрЭлта cea);
	protected проц приУдаленииУпрЭлта(АргиСобУпрЭлта cea);
	final HWND указатель();
	проц разрешиБрос(бул подтвержд);
	бул разрешиБрос();
	protected проц приИзмененииЦветаФона(АргиСоб ea);
	проц цветФона(Цвет ктрл);	
	Цвет цветФона();	
	final цел низ() ;
	final проц границы(Прям к);	
	final Прям границы() ;
	protected проц установиЯдроГраниц(цел ш, цел в, цел ширина, цел высота, ПЗаданныеПределы задано);
	final бул фокусируемый();
	final бул выделяемый();
	final бул захвати();	
	final проц захвати(бул cyes);
	final Прям клиентскийПрямоугольник() ;	
	final бул содержит(УпрЭлт упрэлм);	
	final Размер клиентРазм() ;	
	final проц клиентРазм(Размер разм);	
	protected проц установиЯдроКлиентскогоРазмера(цел ширина, цел высота);
	final бул содержитФокус() ;
	protected проц приИзмененииКонтекстногоМеню(АргиСоб ea);
	проц контекстноеМеню(КонтекстноеМеню меню);		
	КонтекстноеМеню контекстноеМеню() ;	
	final КоллекцияУпрЭлтов упрэлты();
	final бул создан() ;
	protected проц приИзмененииКурсора(АргиСоб ea);
	
package static class БезопасныйКурсор: Курсор
	{
		this(УКурсор hcur);		
		override проц вымести();
	}
		
	
	проц курсор(Курсор cur);
	Курсор курсор() ;	
	static Цвет дефЦветФона() ;	
	static Цвет дефЦветПП();
	static проц дефШрифт(ПШрифтУпрЭлта cf);
	static проц дефШрифт(Шрифт f);	
	static Шрифт дефШрифт() ;
	Прям выведиПрямоугольник() ;
	protected проц приИзменённомРасположении(АргиСоб ea);
	alias приИзменённомРасположении onDockChanged;
	ПДокСтиль док() ;
	проц док(ПДокСтиль ds);
	final бул естьРасположение();
	final проц естьРасположение(бул подтвержд);
	final проц включен(бул подтвержд);
	final бул включен();
	final проц включи();
	final проц отключи();
	бул вФокусе() ;
	проц шрифт(Шрифт f);
	Шрифт шрифт();
	protected проц приИзмененииЦветаПП(АргиСоб ea);
	проц цветПП(Цвет ктрл);
	Цвет цветПП() ;
	final бул естьОтпрыски() ;
	final проц высота(цел h);
	final цел высота();
	final бул созданУказатель_ли();
	final проц лево(цел l);
	final цел лево();
	final проц положение(Точка тчк);
	final Точка положение() ;
	static ПКлавиши клавишиМодификаторы() ;
	static ПКнопкиМыши кнопкиМыши();
	static Точка позМыши();
	final проц имя(Ткст txt);
	final Ткст имя() ;
	protected проц приИзмененииРодителя(АргиСоб ea);
	final Форма найдиФорму();
	final проц родитель(УпрЭлт ктрл);
	final УпрЭлт родитель();
	final проц регион(Регион rgn) ;
	final Регион регион();	
	final цел право();
	проц справаНалево(ПСправаНалево val) ;
	ПСправаНалево справаНалево();
	final проц размер(Размер разм);
	final Размер размер();	
	final цел зэдИндекс();
	final проц табСтоп(бул подтвержд) ;
	final бул табСтоп();
	final проц тэг(Объект o);
	final Объект тэг();
	проц текст(Ткст txt);
	Ткст текст() ;
	final проц верх(цел t);
	final цел верх();
	final УпрЭлт высокоуровневыйУпрЭлт();
	final проц виден(бул подтвержд);
	final бул виден();
	final проц ширина(цел w);
	final цел ширина();
	final проц поместиНазад();
	final проц выведиВперёд();
	final проц выведиВышеНаОдно();
	final проц поместиНижеНаОдно();
	final проц создайУпрЭлт();
	final Графика создайГрафику();
	/+
	static class ЦельБроска: ВизКомОбъект, winapi.IDropTarget
		{
	
			this(УпрЭлт упрэлм);	
			
			extern(Windows):
			override HRESULT QueryInterface(IID* riid, проц** ppv);
			HRESULT DragEnter(winapi.IDataObject pDataObject, DWORD grfKeyState, POINTL тчк, DWORD *pdwEffect);
			HRESULT DragOver(DWORD grfKeyState, POINTL тчк, DWORD *pdwEffect);
			HRESULT DragLeave();
			HRESULT Drop(winapi.IDataObject pDataObject, DWORD grfKeyState, POINTL тчк, DWORD *pdwEffect);

		}
		+/
		
	protected проц приДрэгВышел(АргиСоб ea);
	protected проц приДрэгВошёл(АргиСобДрэг ea);
	protected проц приДрэгНад(АргиСобДрэг ea);
	protected проц приДрэгБрос(АргиСобДрэг ea);
		/+
		static class ИстокБроска: ВизКомОбъект, winapi.IDropSource
		{
			this(УпрЭлт упрэлм);
			
			extern(Windows):
			override HRESULT QueryInterface(IID* riid, проц** ppv);
			HRESULT QueryContinueDrag(BOOL fEscapePressed, DWORD grfKeyState);
			HRESULT GiveFeedback(DWORD dwEffect);
		}
		+/
		
	protected проц приПродолженииДрэгОпроса(АргиСобДрэгОпросПродолжить ea);
	protected проц приПодачеФидбэка(АргиСобФидбэк ea);
	final ПЭффектыДД выполниДД(ИОбъектДанных объДанных, ПЭффектыДД разрешённыеЭффекты);
	final ПЭффектыДД выполниДД(Данные объ, ПЭффектыДД разрешённыеЭффекты);
		
	override т_рав opEquals(Объект o);
	т_рав opEquals(УпрЭлт упрэлм);
	override цел opCmp(Объект o);
	цел opCmp(УпрЭлт упрэлм);
	final бул фокус();
	static УпрЭлт поУказателюОтпрыска(HWND hwChild);
	static УпрЭлт поУказателю(HWND hw);
	final УпрЭлт дайОтпрыскВТочке(Точка тчк);
	final проц скрой();
	final проц покажи();
	final проц инвалидируй();
	final проц инвалидируй(бул andChildren);
	final проц инвалидируй(Прям к);
	final проц инвалидируй(Прям к, бул andChildren);
	final проц инвалидируй(Регион rgn);
	final проц инвалидируй(Регион rgn, бул andChildren);
	final проц перерисуй();
	бул требуетсяВызов();
	final Объект вызови(Объект delegate(Объект[]) дг, Объект[] арги ...);
	final проц вызови(проц delegate() дг);
	final проц задержиВызов(проц function() fn);
	final проц задержиВызов(проц function(УпрЭлт, т_мера[]) fn, т_мера[] params ...);	
	static бул мнемоника_ли(дим кодСим, Ткст текст);
	final Точка точкаККлиенту(Точка тчк);
	final Точка точкаКЭкрану(Точка тчк);
	final Прям прямоугольникККлиенту(Прям к);
	final Прям прямоугольникКЭкрану(Прям к);
	бул подготовьСообщение(inout Сообщение сооб);
	final Размер дайРазмерАвтоМасштаба(Шрифт f);
	final Размер дайРазмерАвтоМасштаба();
	проц освежи();
	проц сбросьЦветФона();
	проц сбросьКурсор();
	проц сбросьШрифт();
	проц сбросьЦветПП();
	проц сбросьСправаНалево();
	проц сбросьТекст();
	final проц возобновиРазметку();
	final проц возобновиРазметку(бул подтвержд);
	final проц заморозьРазметку();
	final проц выполниРазметку(УпрЭлт задействованныйУпрэлт);
	final проц выполниРазметку();
	final проц выделиСледующийУпрЭлт(УпрЭлт упрэлм, бул вперёд, бул tabStopOnly, бул nested, бул wrap);
	final проц выдели();
	проц выдели(бул направлено, бул вперёд);
	final проц установиГраницы(цел ш, цел в, цел ширина, цел высота);
	final проц установиГраницы(цел ш, цел в, цел ширина, цел высота, ПЗаданныеПределы задано);
	Ткст вТкст();	
	final проц обнови();
	static бул поддерживаетОтслеживаниеМыши() ;
	protected проц приОтрисовке(АргиСобРис pea);
	protected проц приПеремещении(АргиСоб ea);
	alias приПеремещении приИзмененииПоложения;	
	protected проц приИзмененииРазмера(АргиСоб ea);
	alias приИзмененииРазмера onSizeChanged;	
	protected проц приВходеМыши(АргиСобМыши mea);
	protected проц приДвиженииМыши(АргиСобМыши mea);
	protected проц приКлавишеВнизу(АргиСобКлавиш kea);
	protected проц приНажатииКлавиши(АргиСобНажатияКлав kea);
	protected проц приКлавишиВверху(АргиСобКлавиш kea);
	protected проц приВращенииМыши(АргиСобМыши mea);
	protected проц onMouseHover(АргиСобМыши mea);
	protected проц приВыходеМыши(АргиСобМыши mea);
	protected проц приМышиВнизу(АргиСобМыши mea);
	protected проц приМышиВверху(АргиСобМыши mea);
	protected проц приКлике(АргиСоб ea);
	protected проц приДвуклике(АргиСоб ea);
	protected проц приФокусировке(АргиСоб ea);
	protected проц приРасфокусировке(АргиСоб ea);
	protected проц приИзмененииВключения(АргиСоб ea);
	protected проц приИзмененииТекста(АргиСоб ea);
	protected проц приИзмененииШрифта(АргиСоб ea);
	protected проц приИзмененииСправаНалево(АргиСоб ea);
	protected проц приИзмененииВидимости(АргиСоб ea);
	protected проц приЗапросеСправки(АргиСобСправка hea);
	protected проц приИзмененииСистемныхЦветов(АргиСоб ea);
	protected проц поСозданиюУказателя(АргиСоб ea);
	protected проц поУдалениюУказателя(АргиСоб ea);
	protected проц приОтрисовкеФона(АргиСобРис pea);
	protected проц поОбратномуСообщению(inout Сообщение m);
	final HWND тчкНадВидимымОтпрыском(Точка тчк);
	protected проц окПроц(inout Сообщение сооб);
	
	Событие!(УпрЭлт, АргиСоб) цветФонаИзменён;
	Событие!(УпрЭлт, АргиСоб) клик;
	Событие!(УпрЭлт, АргиСоб) контекстноеМенюИзменено;
	Событие!(УпрЭлт, АргиСобУпрЭлта) добавленУпрЭлт;
	Событие!(УпрЭлт, АргиСобУпрЭлта) удалёнУпрЭлт;
	Событие!(УпрЭлт, АргиСоб) курсорИзменён;
	Событие!(УпрЭлт, АргиСоб) вымещен;
 	Событие!(УпрЭлт, АргиСоб) измененаРазметка;
 	alias измененаРазметка докИзменён;
	Событие!(УпрЭлт, АргиСоб) двуклик;
	Событие!(УпрЭлт, АргиСоб) измененоВключение;
	Событие!(УпрЭлт, АргиСоб) изменёнШрифт;
	Событие!(УпрЭлт, АргиСоб) цветППИзменён;
	Событие!(УпрЭлт, АргиСоб) полученФокус;
	Событие!(УпрЭлт, АргиСоб) созданУказатель;
	Событие!(УпрЭлт, АргиСоб) указательУдалён;
	Событие!(УпрЭлт, АргиСобСправка) затребованаСправка;
	Событие!(УпрЭлт, АргиСобКлавиш) клавишаВнизу;
	Событие!(УпрЭлт, АргиСобНажатияКлав) клавишаНажата;
	Событие!(УпрЭлт, АргиСобКлавиш) клавишаВверху;
	Событие!(УпрЭлт, АргиСобРасположение) разметка;
	Событие!(УпрЭлт, АргиСоб) расфокусировка;
	Событие!(УпрЭлт, АргиСобМыши) мышьВнизу;
	Событие!(УпрЭлт, АргиСобМыши) мышьВошла;
	Событие!(УпрЭлт, АргиСобМыши) mouseHover;
	Событие!(УпрЭлт, АргиСобМыши) мышьВышла;
	Событие!(УпрЭлт, АргиСобМыши) мышьДвижется;
	Событие!(УпрЭлт, АргиСобМыши) мышьВверху;
	Событие!(УпрЭлт, АргиСобМыши) вращениеМыши;
	Событие!(УпрЭлт, АргиСоб) перемещение;
	alias перемещение положениеИзменено;
	Событие!(УпрЭлт, АргиСобРис) отрисовка;
	Событие!(УпрЭлт, АргиСоб) родительИзменён;
	Событие!(УпрЭлт, АргиСоб) перемерка;
	alias перемерка размерИзменён;
	Событие!(УпрЭлт, АргиСоб) справаНаЛевоИзменено;
	Событие!(УпрЭлт, АргиСоб) системныеЦветаИзменены;
	Событие!(УпрЭлт, АргиСоб) текстИзменён;
	Событие!(УпрЭлт, АргиСоб) видимостьИзменена;
	Событие!(УпрЭлт, АргиСобДрэг) дрэгДроп;
	Событие!(УпрЭлт, АргиСобДрэг) дрэгВход;
	Событие!(УпрЭлт, АргиСоб) дрэгВыход;
	Событие!(УпрЭлт, АргиСобДрэг) дрэгНад;
	Событие!(УпрЭлт, АргиСобФидбэк) подачаФидбэка;
	Событие!(УпрЭлт, АргиСобДрэгОпросПродолжить) запросПродолжитьДрэг;
		
	this();
	this(Ткст текст);
	this(УпрЭлт ктрлРодитель, Ткст текст);
	this(Ткст текст, цел лево, цел верх, цел ширина, цел высота);
	this(УпрЭлт ктрлРодитель, Ткст текст, цел лево, цел верх, цел ширина, цел высота);
	~this();
	проц вымести();	
	protected проц вымести(бул вымещается);
	protected Размер дефРазм();
	public final проц перемерьПерерисуй(бул подтвержд);
	final бул перемерьПерерисуй();
	public final проц дезактивируйВизСтили(бул подтвержд = да);
	КоллекцияУпрЭлтов создайЭкземплярУпрЭлтов();
	protected проц создайПараметры(inout ПарамыСозд cp);
	protected проц создайУказатель();
	public final бул восстановлениеУказателя();
	protected проц восстановиУказатель();
	проц удалиУказатель();
	protected проц приВымещении(АргиСоб ea);
	protected final бул дайСтиль(ПСтилиУпрЭлта флаг);
	protected final проц установиСтиль(ПСтилиУпрЭлта флаг, бул значение);
	protected final проц обновиСтили();
	final бул дайВерхнийУровень();
	package final проц н_раскладка(УпрЭлт упрэлм, бул vcheck = да);
	package final проц в_изменено();
	protected проц иницРаскладку();
	protected проц приРазметке(АргиСобРасположение lea);
	проц установиЯдроВидимого(бул подтвержд);
	protected бул обработайАргиСобКлавиш(inout Сообщение сооб);
	protected бул обработайМнемонику(дим кодСим);
	проц дефОкПроц(inout Сообщение сооб);	
}

package abstract class СуперКлассУпрЭлта: УпрЭлт // dapi.d
{
	abstract protected проц предшОкПроц(inout Сообщение сооб);	
	protected override проц окПроц(inout Сообщение сооб);
	override проц дефОкПроц(inout Сообщение m);
	 override проц приОтрисовкеФона(АргиСобРис pea);
}

class УпрЭлтСПрокруткой: УпрЭлт 
{
	final Размер autoScaleBaseSize();
	final проц autoScaleBaseSize(Размер newSize) ;
	final проц автоМасштаб(бул подтвержд) ;
	final бул автоМасштаб();
	final Точка позПрокрутки();
	static Размер вычислиМасштаб(Размер area, Размер toScale, Размер fromScale);
	Размер вычислиМасштаб(Размер area, Размер toScale);
	protected override проц приДобавленииУпрЭлта(АргиСобУпрЭлта ea);
	override Прям выведиПрямоугольник();
	final проц размПрокрутки(Размер разм);
	final Размер размПрокрутки() ;
	
	class КраяДокПаддинга
	{
		final проц изменено();
		проц все(цел ш);
		final цел все();
		проц лево(цел ш) ;		
		цел лево();		
		проц верх(цел ш) ;		
		цел верх();		
		проц право(цел ш);		
		цел право();		
		проц низ(цел ш);		
		цел низ();
	}
		
	final КраяДокПаддинга докПаддинг();
	this();
	
	const Размер ДЕФОЛТНЫЙ_МАСШТАБ = { 5, 13 };
	
	final проц прокруткаГ(бул подтвержд);
	final бул прокруткаГ() ;
	final проц прокруткаВ(бул подтвержд);
	final бул прокруткаВ() ;
	protected:
	override проц окПроц(inout Сообщение m);
	override проц приВращенииМыши(АргиСобМыши ea);
	override проц поСозданиюУказателя(АргиСоб ea);
	override проц приИзмененииВидимости(АргиСоб ea);
	override проц приИзмененииРазмера(АргиСоб ea);
	
}

class УпрЭлтКонтейнер: УпрЭлтСПрокруткой, ИУпрЭлтКонтейнер
{
	УпрЭлт активныйУпрЭлт();
	проц активныйУпрЭлт(УпрЭлт упрэлм);
	final бул активируйУпрЭлт(УпрЭлт упрэлм);
	final Форма формаРодитель() ;
	this();
}

