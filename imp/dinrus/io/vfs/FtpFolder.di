module io.vfs.FtpFolder;
import io.vfs.model;

private ткст фиксируйИмя(ткст toFix) ;
private ткст проверьПерв(ткст toFix) ;
private ткст проверьПоследн(ткст toFix);
private ткст проверьКат(ткст первый, ткст последний);
private ИнфОФайлеФтп[] дайЗаписи(СоединениеФтп ftp, ткст путь = "");
private ИнфОФайлеФтп[] дайФайлы(СоединениеФтп ftp, ткст путь = "") ;
private ИнфОФайлеФтп[] дайПапки(СоединениеФтп ftp, ткст путь = "") ;

class ЗаписьПапкиФтп: ЗаписьПапкиВфс {

    ткст toString_, name_, username_, password_;
    бцел port_;

    public this(ткст сервер, ткст путь, ткст ник = "",
                ткст пароль = "", бцел порт = 21);
    final ПапкаВфс открой();
    final ПапкаВфс создай();
    final бул есть_ли();
}

class ПапкаФтп: ПапкаВфс {

    ткст toString_, name_, username_, password_;
    бцел port_;

    public this(ткст сервер, ткст путь, ткст ник = "",
                ткст пароль = "", бцел порт = 21);
    final ткст имя() ;
    final ткст вТкст();
    final ФайлВфс файл(ткст путь);
    final ЗаписьПапкиВфс папка(ткст путь);
    final ПапкиВфс сам() ;
    final ПапкиВфс дерево();
    final цел opApply(цел delegate(ref ПапкаВфс) дг);
    final ПапкаВфс очисть() ;
    final бул записываемый();
    ПапкаВфс закрой(бул подай = да) ;
    проц проверь(ПапкаВфс папка, бул mounting);
}

class ПапкиФтп: ПапкиВфс {

    ткст toString_, name_, username_, password_;
    бцел port_;
    бул flat_;
    ИнфОФайлеФтп[] infos_;

    package this(ткст сервер, ткст путь, ткст ник = "",
                 ткст пароль = "", бцел порт = 21, ИнфОФайлеФтп[] infos = пусто,
                 бул flat = нет);

    public this(ткст сервер, ткст путь, ткст ник = "",
                ткст пароль = "", бцел порт = 21, бул flat = нет);
    final цел opApply(цел delegate(ref ПапкаВфс) дг);
    final бцел файлы() ;
    final бцел папки();
    final бцел записи() ;
    final бдол байты() ;
    final ПапкиВфс поднабор(ткст образец) ;
    final ФайлыВфс каталог(ткст образец);
    final ФайлыВфс каталог(ФильтрВфс фильтр = пусто) ;
}

class ФайлФтп: ФайлВфс {

    ткст toString_, name_, username_, password_;
    бцел port_;
    бул conOpen;
    СоединениеФтп conn;

    public this(ткст сервер, ткст путь, ткст ник = "",
                ткст пароль = "", бцел порт = 21);
    final ткст имя() ;
    final ткст вТкст() ;
    final бул есть_ли();
    final бдол размер() ;
    final ФайлВфс копируй(ФайлВфс источник) ;*
    final ФайлВфс перемести(ФайлВфс источник);
    final ФайлВфс создай();
    final ФайлВфс создай(ИПотокВвода поток);
    final ФайлВфс удали() ;
    final ИПотокВвода ввод() ;
    final ИПотокВывода вывод() ;
    final ФайлВфс dup() ;
    final Время измвремя() ;
    final Время создвремя() ;
    final Время доствремя();
    final Время изменён();
}

class ФайлыФтп: ФайлыВфс {

    ткст toString_, name_, username_, password_;
    бцел port_;
    ИнфОФайлеФтп[] infos_;

    public this(ткст сервер, ткст путь, ткст ник = "",
                ткст пароль = "", бцел порт = 21, ИнфОФайлеФтп[] infos = пусто);

    final проц заполниИнфы() ;
    final цел opApply(цел delegate(ref ФайлВфс) дг) ;
    final бцел файлы();
    final бдол байты() ;
}

