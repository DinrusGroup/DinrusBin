module io.stream.Bzip;

private import exception : ВВИскл;
private import io.device.Conduit : ФильтрВвода, ФильтрВывода;
private import io.model : ИПотокВвода, ИПотокВывода, ИПровод;



class БзипВывод : ФильтрВывода
{
    enum РазмерБлока : цел
    {
        Нормальный = 9,
        Быстрый = 1,
        Наилучший = 9,
    }

    this(ИПотокВывода поток, цел размерБлока = РазмерБлока.Нормальный);
    private проц init(ИПотокВывода поток, цел размерБлока);
    ~this();
    проц сбрось(ИПотокВывода поток, цел размерБлока = РазмерБлока.Нормальный);
    т_мера пиши(проц[] ист);
    т_мера записано();
    проц закрой();
    проц подай();
    override дол сместись(дол смещение, Якорь якорь = Якорь.Нач);
    private проц kill_bzs();
    private проц check_valid();
}

class БзипВвод : ФильтрВвода
{
    this(ИПотокВвода поток, бул small=нет);
    private проц init(ИПотокВвода поток, бул small);
    ~this();
    проц сбрось(ИПотокВвода поток, бул small=нет);
    т_мера читай(проц[] приёмн);
    override проц закрой();
    override дол сместись(дол смещение, Якорь якорь = Якорь.Нач);
    private проц kill_bzs();
    private проц check_valid();
}

class ИсключениеБзип : ВВИскл
{
    this(in цел код);
    this(ткст сооб);
    private ткст имяКода(in цел код);
}

class ИсклЗакрытБзип : ВВИскл
{
    this();
}

class ИсклБзипЕщёНеЗакрыт : ВВИскл
{
    this();
}
