module mesh.Status;

/** Статус биты использован by the Статус class. 
 *  See_Also: auxd.OpenMesh.Атрибуты.ИнфОСтатусе
 */
enum Атрибуты : бцел {

  УДАЛЁН  = 1,   ///< Item имеется been удалён_ли
  БЛОКИРОВАН   = 2,   ///< Item is блокирован_ли.
  ВЫДЕЛЕН = 4,   ///< Item is выделен_ли.
  СКРЫТ   = 8,   ///< Item is скрыт_ли.
  ФИЧА  = 16,  ///< Item is a фича_ли or belongs to a фича_ли.
  ТЭГИРОВАН   = 32,  ///< Item is тэгирован_ли.
  ТЭГИРОВАН2  = 64,  ///< Alternate bit for tagging an item.
  НЕИСПОЛЬЗОВАН   = 128  ///<
}

alias Атрибуты БитыСтатуса ;

/** \class ИнфОСтатусе Статус.hh <OpenMesh/Атрибуты/Статус.hh>
 *
 *   Add status information to a base class.
 *
 *   See_Also: БитыСтатуса
 */
struct ИнфОСтатусе
{
public:

    alias бцел т_значение;
    
    static ИнфОСтатусе opCall();

    ///  удалён_ли ?
    бул удалён_ли();
    /// установи удалён_ли
    проц поставь_удалён(бул _b) ;


    ///блокирован_ли ?
    бул блокирован_ли();
    /// установи блокирован_ли
    проц поставь_блокирован(бул _b) ;


    /// выделен_ли ?
    бул выделен_ли() ;
    /// установи выделен_ли
    проц поставь_выделен(бул _b);


    ///скрыт_ли ?
    бул скрыт_ли() ;
    /// установи скрыт_ли
    проц поставь_скрыт(бул _b);


    /// фича_ли ?
    бул фича_ли();
    /// установи фича_ли
    проц поставь_фича(бул _b) ;


    /// тэгирован_ли ?
    бул тэгирован_ли();
    /// установи тэгирован_ли
    проц поставь_тэгирован(бул _b);


    ///тэгирован2_ли ? This is just one more tag info.
    бул тэгирован2_ли();
    /// установи тэгирован_ли
    проц поставь_тэгирован2(бул _b);


    /// return whole status
    бцел биты();
    /// установи whole status at once
    проц установи_биты(бцел _bits);


    /// is a certain bit установи ?
    бул установлен_ли_бит(бцел _s);
    /// установи a certain bit
    проц установи_бит(бцел _s);
    /// unset a certain bit
    проц отмени_бит(бцел _s);
    /// установи or unset a certain bit
    проц измени_бит(бцел _s, бул _b) ;


private: 

    т_значение статус_  = 0;
}


unittest {
    ИнфОСтатусе x;
    x.установи_бит(БитыСтатуса.УДАЛЁН);
    assert(x.установлен_ли_бит(БитыСтатуса.УДАЛЁН));
    assert(x.удалён_ли());
}