
module util.fileex;

version(unix)   version = Unix;
version(Unix)   version = Posix;
version(linux)  version = Posix;
version(darwin) version = Posix;

private{
    //import stdrus;

    import util.str;
    import util.booltype;   // definition of Да and Нет
    alias util.booltype.Да Да;
    alias util.booltype.Нет Нет;
    alias util.booltype.Бул Бул;

    char[][] vGrepOpts;

    class ФайлДопИскл : Ошибка
    {
        this(ткст pMsg);
    }


}

public {
    version(BuildVerbose) Бул подробно;
    Бул тестЗапуск;
    ткст расширениеЭкзэ;
    ткст идПути;
}
// Конструктор модуля
// ----------------------------------------------
static this()
// ----------------------------------------------
{
    version(Windows)
    {
        расширениеЭкзэ = "exe";
        идПути = "PATH";
    }
    version(Posix)
    {
        расширениеЭкзэ = "";
        идПути = "PATH";
    }
    version(BuildVerbose) подробно = Нет;
    тестЗапуск = Нет;
}

enum ОпцПолучения
{
    Есть = 'e',   // Must exist otherwise Get fails.
    Всегда = 'a'    // Get always returns something, even if it's just
                    //   empty lines for a missing file.
};

// Зачитать весь файл в текстовое представление.
ткст дайТекст(ткст имяф, ОпцПолучения опц = ОпцПолучения.Всегда);

// Считать весь файл в набор строк.
ткст[] дайТекстПострочно(ткст имяф, ОпцПолучения опц = ОпцПолучения.Всегда);

enum ОпцСоздания
{
    Новый = 'n',      // Должен быть создан новый файл, поэтому он не может уже существовать.
    Создать = 'c',   // Может быть либо создан, либо заменён; что-то одно из двух.
    Заменить = 'r'   // Должен быть заменён уже существующий файл.
};

проц создайТекстФайл(ткст имяф, ткст[] строки, ОпцСоздания опц = ОпцСоздания.Создать);
проц создайТекстФайл(ткст имяф, ткст строки, ОпцСоздания опц = ОпцСоздания.Создать);
дол grep(ткст данные, ткст образец);
бдол[] найдиВФайле(ткст имяф, ткст текст, ткст опции = "", бцел макс=1);
цел ВыполниКоманду(ткст pExeName, ткст команда);
цел ВыполниКоманду(ткст команда);

