/*********************************************************
   Авторское право: (C) 2008 принадлежит Steven Schveighoffer.
              Все права защищены

   Лицензия: $(LICENSE)

**********************************************************/
module col.model.Multiset;
public import col.model.Collection,
       col.model.Addable,
       col.model.Multi;

/**
 * Мультинабор - это контейнер, допускающий несколько экземпляров с одним и тем же значением
 *добавляемым.
 *
 *Это похоже на список, но упорядоченность не обязательна.  То
 * есть, элементы могут хрониться в порядке добавления.
 *
 * Поскольку упорядоченность необязательна, коллекция может менять порядок элементов по
 * удалению или добавлению, чтобы оптимизировать операции.
 */
interface Мультинабор(З) : Коллекция!(З), Добавляемый!(З), Мульти!(З)
{
    /**
     * covariant очисти (from Коллекция)
     */
    Мультинабор!(З) очисти();

    /**
     * covariant dup (from Коллекция)
     */
    Мультинабор!(З) dup();

    /**
     * Covariant удали (from Коллекция)
     */
    Мультинабор!(З) удали(З з);

    /**
     * Covariant удали (from Коллекция)
     */
    Мультинабор!(З) удали(З з, ref бул был_Удалён);

    /**
     * Covariant добавь (from Добавляемый)
     */
    Мультинабор!(З) добавь(З з);

    /**
     * Covariant добавь (from Добавляемый)
     */
    Мультинабор!(З) добавь(З з, ref бул был_добавлен);

    /**
     * Covariant добавь (from Добавляемый)
     */
    Мультинабор!(З) добавь(Обходчик!(З) обх);

    /**
     * Covariant добавь (from Добавляемый)
     */
    Мультинабор!(З) добавь(Обходчик!(З) обх, ref бцел чло_добавленных);

    /**
     * Covariant добавь (from Добавляемый)
     */
    Мультинабор!(З) добавь(З[] массив);

    /**
     * Covariant добавь (from Добавляемый)
     */
    Мультинабор!(З) добавь(З[] массив, ref бцел чло_добавленных);

    /**
     * covariant удалиВсе (from Мульти)
     */
    Мультинабор!(З) удалиВсе(З з);

    /**
     * covariant удалиВсе (from Мульти)
     */
    Мультинабор!(З) удалиВсе(З з, ref бцел чло_Удалённых);

    /**
     * Получает самый удобный элемент их мультинабора.  Прим.: не
     * предполагается никакого определённого порядка элементов, поэтому это м.б.последн
     * добавленным элементом, м.б. первым, может быть одним из середины.  Эта
     * элементь - была бы первой итерируемой, если бы мутьтинабор использовался как
     * итератор (обходчик).  Следовательно, удаление его посредством удали(дай())
     * будет меньше по времени, чем обычно в рантайме O(n).
     */
    З дай();

    /**
     * Удалить наиболее подходящий элемент из мультинабра и вернуть его
     * значение.  Это эквивалентно удали(дай()), но выполняет только 1 поиск.
     *
     * Результат при вызове на пустом мультинаборе не определённый.
     */
    З изыми();
}
