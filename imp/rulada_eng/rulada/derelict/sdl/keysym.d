/* Converted to D from SDL_keysym.h by htod */
module derelict.sdl.keysym;
/*
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2006 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
*/

//C     #ifndef _SDL_keysym_h
//C     #define _SDL_keysym_h

/* What we really want is a mapping of every raw key on the keyboard.
   To support international keyboards, we use the range 0xA1 - 0xFF
   as international virtual keycodes.  We'll follow in the footsteps of X11...
   The names of the keys
 */
 
//C     typedef enum {
	/* The keyboard syms have been cleverly chosen to map to ASCII */
//C     	SDLK_UNKNOWN		= 0,
//C     	SDLK_FIRST		= 0,
//C     	SDLK_BACKSPACE		= 8,
//C     	SDLK_TAB		= 9,
//C     	SDLK_CLEAR		= 12,
//C     	SDLK_RETURN		= 13,
//C     	SDLK_PAUSE		= 19,
//C     	SDLK_ESCAPE		= 27,
//C     	SDLK_SPACE		= 32,
//C     	SDLK_EXCLAIM		= 33,
//C     	SDLK_QUOTEDBL		= 34,
//C     	SDLK_HASH		= 35,
//C     	SDLK_DOLLAR		= 36,
//C     	SDLK_AMPERSAND		= 38,
//C     	SDLK_QUOTE		= 39,
//C     	SDLK_LEFTPAREN		= 40,
//C     	SDLK_RIGHTPAREN		= 41,
//C     	SDLK_ASTERISK		= 42,
//C     	SDLK_PLUS		= 43,
//C     	SDLK_COMMA		= 44,
//C     	SDLK_MINUS		= 45,
//C     	SDLK_PERIOD		= 46,
//C     	SDLK_SLASH		= 47,
//C     	SDLK_0			= 48,
//C     	SDLK_1			= 49,
//C     	SDLK_2			= 50,
//C     	SDLK_3			= 51,
//C     	SDLK_4			= 52,
//C     	SDLK_5			= 53,
//C     	SDLK_6			= 54,
//C     	SDLK_7			= 55,
//C     	SDLK_8			= 56,
//C     	SDLK_9			= 57,
//C     	SDLK_COLON		= 58,
//C     	SDLK_SEMICOLON		= 59,
//C     	SDLK_LESS		= 60,
//C     	SDLK_EQUALS		= 61,
//C     	SDLK_GREATER		= 62,
//C     	SDLK_QUESTION		= 63,
//C     	SDLK_AT			= 64,
	/* 
	   Skip uppercase letters
	 */
//C     	SDLK_LEFTBRACKET	= 91,
//C     	SDLK_BACKSLASH		= 92,
//C     	SDLK_RIGHTBRACKET	= 93,
//C     	SDLK_CARET		= 94,
//C     	SDLK_UNDERSCORE		= 95,
//C     	SDLK_BACKQUOTE		= 96,
//C     	SDLK_a			= 97,
//C     	SDLK_b			= 98,
//C     	SDLK_c			= 99,
//C     	SDLK_d			= 100,
//C     	SDLK_e			= 101,
//C     	SDLK_f			= 102,
//C     	SDLK_g			= 103,
//C     	SDLK_h			= 104,
//C     	SDLK_i			= 105,
//C     	SDLK_j			= 106,
//C     	SDLK_k			= 107,
//C     	SDLK_l			= 108,
//C     	SDLK_m			= 109,
//C     	SDLK_n			= 110,
//C     	SDLK_o			= 111,
//C     	SDLK_p			= 112,
//C     	SDLK_q			= 113,
//C     	SDLK_r			= 114,
//C     	SDLK_s			= 115,
//C     	SDLK_t			= 116,
//C     	SDLK_u			= 117,
//C     	SDLK_v			= 118,
//C     	SDLK_w			= 119,
//C     	SDLK_x			= 120,
//C     	SDLK_y			= 121,
//C     	SDLK_z			= 122,
//C     	SDLK_DELETE		= 127,
	/* End of ASCII mapped keysyms */

	/* International keyboard syms */
//C     	SDLK_WORLD_0		= 160,		/* 0xA0 */
//C     	SDLK_WORLD_1		= 161,
//C     	SDLK_WORLD_2		= 162,
//C     	SDLK_WORLD_3		= 163,
//C     	SDLK_WORLD_4		= 164,
//C     	SDLK_WORLD_5		= 165,
//C     	SDLK_WORLD_6		= 166,
//C     	SDLK_WORLD_7		= 167,
//C     	SDLK_WORLD_8		= 168,
//C     	SDLK_WORLD_9		= 169,
//C     	SDLK_WORLD_10		= 170,
//C     	SDLK_WORLD_11		= 171,
//C     	SDLK_WORLD_12		= 172,
//C     	SDLK_WORLD_13		= 173,
//C     	SDLK_WORLD_14		= 174,
//C     	SDLK_WORLD_15		= 175,
//C     	SDLK_WORLD_16		= 176,
//C     	SDLK_WORLD_17		= 177,
//C     	SDLK_WORLD_18		= 178,
//C     	SDLK_WORLD_19		= 179,
//C     	SDLK_WORLD_20		= 180,
//C     	SDLK_WORLD_21		= 181,
//C     	SDLK_WORLD_22		= 182,
//C     	SDLK_WORLD_23		= 183,
//C     	SDLK_WORLD_24		= 184,
//C     	SDLK_WORLD_25		= 185,
//C     	SDLK_WORLD_26		= 186,
//C     	SDLK_WORLD_27		= 187,
//C     	SDLK_WORLD_28		= 188,
//C     	SDLK_WORLD_29		= 189,
//C     	SDLK_WORLD_30		= 190,
//C     	SDLK_WORLD_31		= 191,
//C     	SDLK_WORLD_32		= 192,
//C     	SDLK_WORLD_33		= 193,
//C     	SDLK_WORLD_34		= 194,
//C     	SDLK_WORLD_35		= 195,
//C     	SDLK_WORLD_36		= 196,
//C     	SDLK_WORLD_37		= 197,
//C     	SDLK_WORLD_38		= 198,
//C     	SDLK_WORLD_39		= 199,
//C     	SDLK_WORLD_40		= 200,
//C     	SDLK_WORLD_41		= 201,
//C     	SDLK_WORLD_42		= 202,
//C     	SDLK_WORLD_43		= 203,
//C     	SDLK_WORLD_44		= 204,
//C     	SDLK_WORLD_45		= 205,
//C     	SDLK_WORLD_46		= 206,
//C     	SDLK_WORLD_47		= 207,
//C     	SDLK_WORLD_48		= 208,
//C     	SDLK_WORLD_49		= 209,
//C     	SDLK_WORLD_50		= 210,
//C     	SDLK_WORLD_51		= 211,
//C     	SDLK_WORLD_52		= 212,
//C     	SDLK_WORLD_53		= 213,
//C     	SDLK_WORLD_54		= 214,
//C     	SDLK_WORLD_55		= 215,
//C     	SDLK_WORLD_56		= 216,
//C     	SDLK_WORLD_57		= 217,
//C     	SDLK_WORLD_58		= 218,
//C     	SDLK_WORLD_59		= 219,
//C     	SDLK_WORLD_60		= 220,
//C     	SDLK_WORLD_61		= 221,
//C     	SDLK_WORLD_62		= 222,
//C     	SDLK_WORLD_63		= 223,
//C     	SDLK_WORLD_64		= 224,
//C     	SDLK_WORLD_65		= 225,
//C     	SDLK_WORLD_66		= 226,
//C     	SDLK_WORLD_67		= 227,
//C     	SDLK_WORLD_68		= 228,
//C     	SDLK_WORLD_69		= 229,
//C     	SDLK_WORLD_70		= 230,
//C     	SDLK_WORLD_71		= 231,
//C     	SDLK_WORLD_72		= 232,
//C     	SDLK_WORLD_73		= 233,
//C     	SDLK_WORLD_74		= 234,
//C     	SDLK_WORLD_75		= 235,
//C     	SDLK_WORLD_76		= 236,
//C     	SDLK_WORLD_77		= 237,
//C     	SDLK_WORLD_78		= 238,
//C     	SDLK_WORLD_79		= 239,
//C     	SDLK_WORLD_80		= 240,
//C     	SDLK_WORLD_81		= 241,
//C     	SDLK_WORLD_82		= 242,
//C     	SDLK_WORLD_83		= 243,
//C     	SDLK_WORLD_84		= 244,
//C     	SDLK_WORLD_85		= 245,
//C     	SDLK_WORLD_86		= 246,
//C     	SDLK_WORLD_87		= 247,
//C     	SDLK_WORLD_88		= 248,
//C     	SDLK_WORLD_89		= 249,
//C     	SDLK_WORLD_90		= 250,
//C     	SDLK_WORLD_91		= 251,
//C     	SDLK_WORLD_92		= 252,
//C     	SDLK_WORLD_93		= 253,
//C     	SDLK_WORLD_94		= 254,
//C     	SDLK_WORLD_95		= 255,		/* 0xFF */

	/* Numeric keypad */
//C     	SDLK_KP0		= 256,
//C     	SDLK_KP1		= 257,
//C     	SDLK_KP2		= 258,
//C     	SDLK_KP3		= 259,
//C     	SDLK_KP4		= 260,
//C     	SDLK_KP5		= 261,
//C     	SDLK_KP6		= 262,
//C     	SDLK_KP7		= 263,
//C     	SDLK_KP8		= 264,
//C     	SDLK_KP9		= 265,
//C     	SDLK_KP_PERIOD		= 266,
//C     	SDLK_KP_DIVIDE		= 267,
//C     	SDLK_KP_MULTIPLY	= 268,
//C     	SDLK_KP_MINUS		= 269,
//C     	SDLK_KP_PLUS		= 270,
//C     	SDLK_KP_ENTER		= 271,
//C     	SDLK_KP_EQUALS		= 272,

	/* Arrows + Home/End pad */
//C     	SDLK_UP			= 273,
//C     	SDLK_DOWN		= 274,
//C     	SDLK_RIGHT		= 275,
//C     	SDLK_LEFT		= 276,
//C     	SDLK_INSERT		= 277,
//C     	SDLK_HOME		= 278,
//C     	SDLK_END		= 279,
//C     	SDLK_PAGEUP		= 280,
//C     	SDLK_PAGEDOWN		= 281,

	/* Function keys */
//C     	SDLK_F1			= 282,
//C     	SDLK_F2			= 283,
//C     	SDLK_F3			= 284,
//C     	SDLK_F4			= 285,
//C     	SDLK_F5			= 286,
//C     	SDLK_F6			= 287,
//C     	SDLK_F7			= 288,
//C     	SDLK_F8			= 289,
//C     	SDLK_F9			= 290,
//C     	SDLK_F10		= 291,
//C     	SDLK_F11		= 292,
//C     	SDLK_F12		= 293,
//C     	SDLK_F13		= 294,
//C     	SDLK_F14		= 295,
//C     	SDLK_F15		= 296,

	/* Key state modifier keys */
//C     	SDLK_NUMLOCK		= 300,
//C     	SDLK_CAPSLOCK		= 301,
//C     	SDLK_SCROLLOCK		= 302,
//C     	SDLK_RSHIFT		= 303,
//C     	SDLK_LSHIFT		= 304,
//C     	SDLK_RCTRL		= 305,
//C     	SDLK_LCTRL		= 306,
//C     	SDLK_RALT		= 307,
//C     	SDLK_LALT		= 308,
//C     	SDLK_RMETA		= 309,
//C     	SDLK_LMETA		= 310,
//C     	SDLK_LSUPER		= 311,		/* Left "Windows" key */
//C     	SDLK_RSUPER		= 312,		/* Right "Windows" key */
//C     	SDLK_MODE		= 313,		/* "Alt Gr" key */
//C     	SDLK_COMPOSE		= 314,		/* Multi-key compose key */

	/* Miscellaneous function keys */
//C     	SDLK_HELP		= 315,
//C     	SDLK_PRINT		= 316,
//C     	SDLK_SYSREQ		= 317,
//C     	SDLK_BREAK		= 318,
//C     	SDLK_MENU		= 319,
//C     	SDLK_POWER		= 320,		/* Power Macintosh power key */
//C     	SDLK_EURO		= 321,		/* Some european keyboards */
//C     	SDLK_UNDO		= 322,		/* Atari keyboard has Undo */

	/* Add any other keys here */

//C     	SDLK_LAST
//C     } SDLKey;
enum
{
    SDLK_UNKNOWN,
    SDLK_FIRST = 0,
    SDLK_BACKSPACE = 8,
    SDLK_TAB,
    SDLK_CLEAR = 12,
    SDLK_RETURN,
    SDLK_PAUSE = 19,
    SDLK_ESCAPE = 27,
    SDLK_SPACE = 32,
    SDLK_EXCLAIM,
    SDLK_QUOTEDBL,
    SDLK_HASH,
    SDLK_DOLLAR,
    SDLK_AMPERSAND = 38,
    SDLK_QUOTE,
    SDLK_LEFTPAREN,
    SDLK_RIGHTPAREN,
    SDLK_ASTERISK,
    SDLK_PLUS,
    SDLK_COMMA,
    SDLK_MINUS,
    SDLK_PERIOD,
    SDLK_SLASH,
    SDLK_0,
    SDLK_1,
    SDLK_2,
    SDLK_3,
    SDLK_4,
    SDLK_5,
    SDLK_6,
    SDLK_7,
    SDLK_8,
    SDLK_9,
    SDLK_COLON,
    SDLK_SEMICOLON,
    SDLK_LESS,
    SDLK_EQUALS,
    SDLK_GREATER,
    SDLK_QUESTION,
    SDLK_AT,
    SDLK_LEFTBRACKET = 91,
    SDLK_BACKSLASH,
    SDLK_RIGHTBRACKET,
    SDLK_CARET,
    SDLK_UNDERSCORE,
    SDLK_BACKQUOTE,
    SDLK_a,
    SDLK_b,
    SDLK_c,
    SDLK_d,
    SDLK_e,
    SDLK_f,
    SDLK_g,
    SDLK_h,
    SDLK_i,
    SDLK_j,
    SDLK_k,
    SDLK_l,
    SDLK_m,
    SDLK_n,
    SDLK_o,
    SDLK_p,
    SDLK_q,
    SDLK_r,
    SDLK_s,
    SDLK_t,
    SDLK_u,
    SDLK_v,
    SDLK_w,
    SDLK_x,
    SDLK_y,
    SDLK_z,
    SDLK_DELETE = 127,
    SDLK_WORLD_0 = 160,
    SDLK_WORLD_1,
    SDLK_WORLD_2,
    SDLK_WORLD_3,
    SDLK_WORLD_4,
    SDLK_WORLD_5,
    SDLK_WORLD_6,
    SDLK_WORLD_7,
    SDLK_WORLD_8,
    SDLK_WORLD_9,
    SDLK_WORLD_10,
    SDLK_WORLD_11,
    SDLK_WORLD_12,
    SDLK_WORLD_13,
    SDLK_WORLD_14,
    SDLK_WORLD_15,
    SDLK_WORLD_16,
    SDLK_WORLD_17,
    SDLK_WORLD_18,
    SDLK_WORLD_19,
    SDLK_WORLD_20,
    SDLK_WORLD_21,
    SDLK_WORLD_22,
    SDLK_WORLD_23,
    SDLK_WORLD_24,
    SDLK_WORLD_25,
    SDLK_WORLD_26,
    SDLK_WORLD_27,
    SDLK_WORLD_28,
    SDLK_WORLD_29,
    SDLK_WORLD_30,
    SDLK_WORLD_31,
    SDLK_WORLD_32,
    SDLK_WORLD_33,
    SDLK_WORLD_34,
    SDLK_WORLD_35,
    SDLK_WORLD_36,
    SDLK_WORLD_37,
    SDLK_WORLD_38,
    SDLK_WORLD_39,
    SDLK_WORLD_40,
    SDLK_WORLD_41,
    SDLK_WORLD_42,
    SDLK_WORLD_43,
    SDLK_WORLD_44,
    SDLK_WORLD_45,
    SDLK_WORLD_46,
    SDLK_WORLD_47,
    SDLK_WORLD_48,
    SDLK_WORLD_49,
    SDLK_WORLD_50,
    SDLK_WORLD_51,
    SDLK_WORLD_52,
    SDLK_WORLD_53,
    SDLK_WORLD_54,
    SDLK_WORLD_55,
    SDLK_WORLD_56,
    SDLK_WORLD_57,
    SDLK_WORLD_58,
    SDLK_WORLD_59,
    SDLK_WORLD_60,
    SDLK_WORLD_61,
    SDLK_WORLD_62,
    SDLK_WORLD_63,
    SDLK_WORLD_64,
    SDLK_WORLD_65,
    SDLK_WORLD_66,
    SDLK_WORLD_67,
    SDLK_WORLD_68,
    SDLK_WORLD_69,
    SDLK_WORLD_70,
    SDLK_WORLD_71,
    SDLK_WORLD_72,
    SDLK_WORLD_73,
    SDLK_WORLD_74,
    SDLK_WORLD_75,
    SDLK_WORLD_76,
    SDLK_WORLD_77,
    SDLK_WORLD_78,
    SDLK_WORLD_79,
    SDLK_WORLD_80,
    SDLK_WORLD_81,
    SDLK_WORLD_82,
    SDLK_WORLD_83,
    SDLK_WORLD_84,
    SDLK_WORLD_85,
    SDLK_WORLD_86,
    SDLK_WORLD_87,
    SDLK_WORLD_88,
    SDLK_WORLD_89,
    SDLK_WORLD_90,
    SDLK_WORLD_91,
    SDLK_WORLD_92,
    SDLK_WORLD_93,
    SDLK_WORLD_94,
    SDLK_WORLD_95,
    SDLK_KP0,
    SDLK_KP1,
    SDLK_KP2,
    SDLK_KP3,
    SDLK_KP4,
    SDLK_KP5,
    SDLK_KP6,
    SDLK_KP7,
    SDLK_KP8,
    SDLK_KP9,
    SDLK_KP_PERIOD,
    SDLK_KP_DIVIDE,
    SDLK_KP_MULTIPLY,
    SDLK_KP_MINUS,
    SDLK_KP_PLUS,
    SDLK_KP_ENTER,
    SDLK_KP_EQUALS,
    SDLK_UP,
    SDLK_DOWN,
    SDLK_RIGHT,
    SDLK_LEFT,
    SDLK_INSERT,
    SDLK_HOME,
    SDLK_END,
    SDLK_PAGEUP,
    SDLK_PAGEDOWN,
    SDLK_F1,
    SDLK_F2,
    SDLK_F3,
    SDLK_F4,
    SDLK_F5,
    SDLK_F6,
    SDLK_F7,
    SDLK_F8,
    SDLK_F9,
    SDLK_F10,
    SDLK_F11,
    SDLK_F12,
    SDLK_F13,
    SDLK_F14,
    SDLK_F15,
    SDLK_NUMLOCK = 300,
    SDLK_CAPSLOCK,
    SDLK_SCROLLOCK,
    SDLK_RSHIFT,
    SDLK_LSHIFT,
    SDLK_RCTRL,
    SDLK_LCTRL,
    SDLK_RALT,
    SDLK_LALT,
    SDLK_RMETA,
    SDLK_LMETA,
    SDLK_LSUPER,
    SDLK_RSUPER,
    SDLK_MODE,
    SDLK_COMPOSE,
    SDLK_HELP,
    SDLK_PRINT,
    SDLK_SYSREQ,
    SDLK_BREAK,
    SDLK_MENU,
    SDLK_POWER,
    SDLK_EURO,
    SDLK_UNDO,
    SDLK_LAST,
}
extern (C):
alias int SDLKey;

/* Enumeration of valid key mods (possibly OR'd together) */
//C     typedef enum {
//C     	KMOD_NONE  = 0x0000,
//C     	KMOD_LSHIFT= 0x0001,
//C     	KMOD_RSHIFT= 0x0002,
//C     	KMOD_LCTRL = 0x0040,
//C     	KMOD_RCTRL = 0x0080,
//C     	KMOD_LALT  = 0x0100,
//C     	KMOD_RALT  = 0x0200,
//C     	KMOD_LMETA = 0x0400,
//C     	KMOD_RMETA = 0x0800,
//C     	KMOD_NUM   = 0x1000,
//C     	KMOD_CAPS  = 0x2000,
//C     	KMOD_MODE  = 0x4000,
//C     	KMOD_RESERVED = 0x8000
//C     } SDLMod;
enum
{
    KMOD_NONE,
    KMOD_LSHIFT,
    KMOD_RSHIFT,
    KMOD_LCTRL = 64,
    KMOD_RCTRL = 128,
    KMOD_LALT = 256,
    KMOD_RALT = 512,
    KMOD_LMETA = 1024,
    KMOD_RMETA = 2048,
    KMOD_NUM = 4096,
    KMOD_CAPS = 8192,
    KMOD_MODE = 16384,
    KMOD_RESERVED = 32768,
}
alias int SDLMod;

//C     #define KMOD_CTRL	(KMOD_LCTRL|KMOD_RCTRL)
//C     #define KMOD_SHIFT	(KMOD_LSHIFT|KMOD_RSHIFT)
//C     #define KMOD_ALT	(KMOD_LALT|KMOD_RALT)
//C     #define KMOD_META	(KMOD_LMETA|KMOD_RMETA)

//C     #endif /* _SDL_keysym_h */
